From: David Paleino <dapal@debian.org>
Subject: port code to Mapnik2
Origin: vendor
Forwarded: no

---
 plugins/osmrenderer/mapnikrenderer.cpp |   10 +++++-----
 plugins/osmrenderer/mapnikrenderer.pro |    2 +-
 preprocessor/preprocessor-gui.pro      |    2 +-
 preprocessor/preprocessor.pro          |    2 +-
 4 files changed, 8 insertions(+), 8 deletions(-)

--- monav.orig/plugins/osmrenderer/mapnikrenderer.cpp
+++ monav/plugins/osmrenderer/mapnikrenderer.cpp
@@ -264,7 +264,7 @@ bool MapnikRenderer::Preprocess( IImport
 			const int metaTileSize = m_settings.metaTileSize * m_settings.tileSize + 2 * m_settings.margin;
 
 			mapnik::Map map;
-			mapnik::Image32 image( metaTileSize, metaTileSize );
+			mapnik::image_32 image( metaTileSize, metaTileSize );
 			QTemporaryFile tempOut;
 			QTemporaryFile tempIn;
 			mapnik::load_map( map, m_settings.theme.toLocal8Bit().constData() );
@@ -288,9 +288,9 @@ bool MapnikRenderer::Preprocess( IImport
 				GPSCoordinate drawBottomRightGPS = drawBottomRight.ToGPSCoordinate();
 				projection.forward( drawTopLeftGPS.longitude, drawBottomRightGPS.latitude );
 				projection.forward( drawBottomRightGPS.longitude, drawTopLeftGPS.latitude );
-				mapnik::Envelope<double> boundingBox( drawTopLeftGPS.longitude, drawTopLeftGPS.latitude, drawBottomRightGPS.longitude, drawBottomRightGPS.latitude );
-				map.zoomToBox( boundingBox );
-				mapnik::agg_renderer<mapnik::Image32> renderer( map, image );
+				mapnik::box2d<double> boundingBox( drawTopLeftGPS.longitude, drawTopLeftGPS.latitude, drawBottomRightGPS.longitude, drawBottomRightGPS.latitude );
+				map.zoom_to_box( boundingBox );
+				mapnik::agg_renderer<mapnik::image_32> renderer( map, image );
 				renderer.apply();
 
 				std::string data;
@@ -299,7 +299,7 @@ bool MapnikRenderer::Preprocess( IImport
 				for ( int subX = 0; subX < metaTileSizeX; ++subX ) {
 					for ( int subY = 0; subY < metaTileSizeY; ++subY ) {
 						int indexNumber = ( y + subY - info.minY ) * ( info.maxX - info.minX ) + x + subX - info.minX;
-						mapnik::image_view<mapnik::ImageData32> view = image.get_view( subX * m_settings.tileSize + m_settings.margin, subY * m_settings.tileSize + m_settings.margin, m_settings.tileSize, m_settings.tileSize );
+						mapnik::image_view<mapnik::image_data_32> view = image.get_view( subX * m_settings.tileSize + m_settings.margin, subY * m_settings.tileSize + m_settings.margin, m_settings.tileSize, m_settings.tileSize );
 						std::string result;
 						if ( !m_settings.deleteTiles || info.index[( x + subX - info.minX ) + ( y + subY - info.minY ) * ( info.maxX - info.minX )].size == 1 ) {
 							if ( m_settings.reduceColors )
